package com.example.demo1;
MySpringApplication

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.ApplicationContext;
import org.springframework.context.ConfigurableApplicationContext;
import com.example.demo1.Bean.Student;

 

@SpringBootApplication
public class MyspringApplication {

 

    static ApplicationContext ctx;
    public static void main(String[] args) {
    ConfigurableApplicationContext ctx = SpringApplication.run(MyspringApplication.class, args);
    System.out.println("welcome"+ctx);
    Student s = (Student)ctx.getBean("student");
    s.setSno(11);
    s.setSname("venkatesh");
    s.disp();
    }
}
Student.java

package com.example.demo1.Bean;

import org.springframework.context.annotation.Lazy;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;

 

@Component
public class Student {
    public Student() {
        System.out.println("default Contructer");
    }

 

    private int sno;
    private String sname;
    public int getSno() {
        return sno;
    }
    public void setSno(int sno) {
        this.sno = sno;
    }
    public String getSname() {
        return sname;
    }
    public void setSname(String sname) {
        this.sname = sname;
    }

 

    public void disp() {
        System.out.println(sno+" "+sname);
    }
    
}
pom.xml file

<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.11.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>Practice</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>spring</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
		 <maven-jar-plugin.version>3.1.1</maven-jar-plugin.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
    
<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>



		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>

Application.properties

spring.datasource.url=jdbc:mysql://localhost:3306/spring
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class= com.mysql.jdbc.driver.Driver

 

# JPA
spring.jpa.show-sql=true

ExampleProjectApplication
package com.example.demo;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication; 
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.jdbc.core.JdbcTemplate;

	@SpringBootApplication

	 

	public class EampleeprojectApplication implements CommandLineRunner{
	    @Autowired(required=true)
	    private JdbcTemplate jdtJdbcTemplate;
	    public static void main(String[] args) {
	        SpringApplication.run(EampleeprojectApplication.class, args);
	        
	    }
	    
	    public void createTable() {
	        jdtJdbcTemplate.update("create table cusrtomer(cno int primary key, cname varchar(20))");
	        System.out.println("Table is created");
	    }
	    public void addStudentRecord() {
	        int count = jdtJdbcTemplate.update("insert into cusrtomer values(?,?)",7,"venky");
	        System.out.println("Data is Inserted "+count);
	    }
	    public void updateStudentRecord() {
	        int count = jdtJdbcTemplate.update("update cusrtomer set cname = ? where cno = 7","venkatesh");
	        System.out.println("Data is Updated "+count);
	    }
	   
	    @Override
	    public void run(String... args) throws Exception {
	        // TODO Auto-generated method stub
	       //createTable();
	       //addStudentRecord();
	    	updateStudentRecord();
	        
	        
	    }
	}

Customer.java
package com.example.demo;

public class Customer {
	
		private int cno;
		private String cname;
		public int getCno() {
			return cno;
		}
		public void setCno(int cno) {
			this.cno = cno;
		}
		public String getCname() {
			return cname;
		}
		public void setCname(String cname) {
			this.cname = cname;
		}
		@Override
		public String toString() {
			return "Customer [cno=" + cno + ", cname=" + cname + "]";
		}
		public Customer() {
			System.out.println("default constructor");
			// TODO Auto-generated constructor stub
		}
		public Customer(int cno, String cname) {
			super();
			this.cno = cno;
			this.cname = cname;
		}
}



